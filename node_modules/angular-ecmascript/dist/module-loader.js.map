{"version":3,"sources":["../src/module-loader.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;IAAY,O;;AACZ;;IAAY,K;;;;;;;;IAES,M;AACnB,kBAAY,QAAZ,EAAsB,YAAtB,EAAoC;AAAA;;AAClC,QAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AAC5B,iBAAW,kBAAQ,MAAR,CAAe,QAAf,EAAyB,YAAzB,CAAX;AACD;;AAED,SAAK,MAAL,GAAc,QAAd;AACD;;;;yBAEI,M,EAAiB;AAAA;;AACpB,UAAI,MAAM,UAAN,CAAiB,MAAjB,CAAJ,EAA8B;AAC5B,YAAM,QAAQ,OAAO,SAArB;AACA,eAAO,KAAP,GAAe,OAAO,KAAP,IAAgB,OAAO,IAAtC;AACA,eAAO,OAAP,GAAiB,OAAO,OAAP,IAAkB,EAAnC;;AAEA,YAAI,iBAAiB,QAAQ,QAA7B,EACE,KAAK,YAAL,CAAkB,MAAlB,EADF,KAEK,IAAI,iBAAiB,QAAQ,OAA7B,EACH,KAAK,WAAL,CAAiB,MAAjB,EADG,KAEA,IAAI,iBAAiB,QAAQ,UAA7B,EACH,KAAK,cAAL,CAAoB,MAApB,EADG,KAEA,IAAI,iBAAiB,QAAQ,SAA7B,EACH,KAAK,aAAL,CAAmB,MAAnB,EADG,KAEA,IAAI,iBAAiB,QAAQ,SAA7B,EACH,KAAK,aAAL,CAAmB,MAAnB,EADG,KAEA,IAAI,iBAAiB,QAAQ,OAA7B,EACH,KAAK,WAAL,CAAiB,MAAjB,EADG,KAEA,IAAI,iBAAiB,QAAQ,MAA7B,EACH,KAAK,UAAL,CAAgB,MAAhB,EADG,KAEA,IAAI,iBAAiB,QAAQ,MAA7B,EACH,KAAK,UAAL,CAAgB,MAAhB,EADG,KAEA,IAAI,iBAAiB,QAAQ,MAA7B,EACH,KAAK,UAAL,CAAgB,MAAhB,EADG,KAGH,MAAM,MAAM,mCAAN,CAAN;AACH,OAzBD,MA0BK,IAAI,MAAM,OAAN,CAAc,MAAd,CAAJ,EAA2B;AAC9B,eAAO,OAAP,CAAe;AAAA,iBAAU,MAAK,IAAL,CAAU,MAAV,CAAV;AAAA,SAAf;AACD,OAFI,MAGA,IAAI,MAAM,QAAN,CAAe,MAAf,CAAJ,EAA4B;AAAA;;AAAA,0CA9BnB,IA8BmB;AA9BnB,cA8BmB;AAAA;;AAC/B,wBAAK,MAAL,EAAY,MAAZ,iBAAuB,IAAvB;AACD,OAFI,MAGA;AACH,cAAM,MAAM,yCAAN,CAAN;AACD;;AAED,aAAO,IAAP;AACD;;;iCAEY,Q,EAAU;AACrB,WAAK,MAAL,CAAY,QAAZ,CAAqB,SAAS,KAA9B,EAAqC,QAArC;AACD;;;gCAEW,O,EAAS;AACnB,WAAK,MAAL,CAAY,OAAZ,CAAoB,QAAQ,KAA5B,EAAmC,OAAnC;AACD;;;mCAEc,U,EAAY;AACzB,UAAM,UAAU,WAAW,OAA3B;;AAEA,UAAI,CAAC,MAAM,QAAN,CAAe,OAAf,EAAwB,QAAxB,CAAL,EAAwC;AACtC,gBAAQ,OAAR,CAAgB,QAAhB;AACD;;AAED,WAAK,MAAL,CAAY,UAAZ,CAAuB,WAAW,KAAlC,EAAyC,UAAzC;AACD;;;kCAEa,S,EAAW;AACvB,UAAM,SAAS,SAAT,MAAS,GAAa;AAAA,2CAAT,IAAS;AAAT,cAAS;AAAA;;AAC1B,kDAAW,SAAX,gBAAwB,IAAxB;AACD,OAFD;;AAIA,aAAO,OAAP,GAAiB,UAAU,OAA3B;AACA,WAAK,MAAL,CAAY,SAAZ,CAAsB,UAAU,KAAhC,EAAuC,MAAvC;AACD;;;kCAEa,S,EAAW;AACvB,UAAI,kBAAJ;AACA,UAAM,UAAU,UAAU,OAA1B;;AAEA,UAAM,SAAS,SAAT,MAAS,GAAa;AAAA,2CAAT,IAAS;AAAT,cAAS;AAAA;;AAC1B,uDAAgB,SAAhB,gBAA6B,IAA7B;AACA,eAAO,QAAP;AACD,OAHD;;AAKA,UAAM,WAAW,SAAX,QAAW,GAAa;AAAA;;AAC5B,iCAAU,QAAV;AACA,eAAO,UAAU,SAAjB;AACD,OAHD;;AAKA,UAAI,CAAC,MAAM,QAAN,CAAe,OAAf,EAAwB,WAAxB,CAAL,EAA2C;AACzC,gBAAQ,OAAR,CAAgB,WAAhB;AACD;;AAED,WAAK,MAAL,CAAY,SAAZ,CAAsB,UAAU,KAAhC,EAAuC,MAAvC;AACD;;;gCAEW,O,EAAS;AACnB,UAAM,SAAS,SAAT,MAAS,GAAa;AAAA,2CAAT,IAAS;AAAT,cAAS;AAAA;;AAC1B,YAAM,6CAAc,OAAd,gBAAyB,IAAzB,KAAN;AACA,eAAgB,QAAQ,MAAxB,MAAO,OAAP;AACD,OAHD;;AAKA,aAAO,OAAP,GAAiB,QAAQ,OAAzB;AACA,WAAK,MAAL,CAAY,OAAZ,CAAoB,QAAQ,KAA5B,EAAmC,MAAnC;AACD;;;+BAEU,M,EAAQ;AACjB,UAAM,SAAS,SAAT,MAAS,GAAa;AAAA,2CAAT,IAAS;AAAT,cAAS;AAAA;;AAC1B,YAAM,4CAAa,MAAb,gBAAuB,IAAvB,KAAN;AACA,eAAe,OAAO,MAAtB,MAAO,MAAP;AACD,OAHD;;AAKA,aAAO,OAAP,GAAiB,OAAO,OAAxB;AACA,WAAK,MAAL,CAAY,MAAZ,CAAmB,OAAO,KAA1B,EAAiC,MAAjC;AACD;;;+BAEU,M,EAAQ;AACjB,UAAM,SAAS,SAAT,MAAS,GAAa;AAAA,2CAAT,IAAS;AAAT,cAAS;AAAA;;AAC1B,YAAM,4CAAa,MAAb,gBAAuB,IAAvB,KAAN;AACA,eAAO,OAAO,SAAP,EAAP;AACD,OAHD;;AAKA,aAAO,OAAP,GAAiB,OAAO,OAAxB;AACA,WAAK,MAAL,CAAY,MAAZ,CAAmB,MAAnB;AACD;;;+BAEU,M,EAAQ;AACjB,UAAM,SAAS,SAAT,MAAS,GAAa;AAAA,2CAAT,IAAS;AAAT,cAAS;AAAA;;AAC1B,YAAM,4CAAa,MAAb,gBAAuB,IAAvB,KAAN;AACA,eAAO,OAAO,GAAP,EAAP;AACD,OAHD;;AAKA,aAAO,OAAP,GAAiB,OAAO,OAAxB;AACA,WAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB;AACD;;;;;;kBAvIkB,M","file":"module-loader.js","sourcesContent":["import Angular from 'angular';\nimport * as Helpers from './module-helpers';\nimport * as Utils from './utils';\n\nexport default class Loader {\n  constructor(ngModule, dependencies) {\n    if (Utils.isString(ngModule)) {\n      ngModule = Angular.module(ngModule, dependencies);\n    }\n\n    this.module = ngModule;\n  }\n\n  load(Helper, ...args) {\n    if (Utils.isFunction(Helper)) {\n      const proto = Helper.prototype;\n      Helper.$name = Helper.$name || Helper.name;\n      Helper.$inject = Helper.$inject || [];\n\n      if (proto instanceof Helpers.Provider)\n        this.loadProvider(Helper);\n      else if (proto instanceof Helpers.Service)\n        this.loadService(Helper);\n      else if (proto instanceof Helpers.Controller)\n        this.loadController(Helper);\n      else if (proto instanceof Helpers.Directive)\n        this.loadDirective(Helper);\n      else if (proto instanceof Helpers.Decorator)\n        this.loadDecorator(Helper);\n      else if (proto instanceof Helpers.Factory)\n        this.loadFactory(Helper);\n      else if (proto instanceof Helpers.Filter)\n        this.loadFilter(Helper);\n      else if (proto instanceof Helpers.Config)\n        this.loadConfig(Helper);\n      else if (proto instanceof Helpers.Runner)\n        this.loadRunner(Helper);\n      else\n        throw Error('can\\'t load unknown module-helper');\n    }\n    else if (Utils.isArray(Helper)) {\n      Helper.forEach(Helper => this.load(Helper));\n    }\n    else if (Utils.isString(Helper)) {\n      this.module[Helper](...args);\n    }\n    else {\n      throw Error('`Helper` must be a function or a string');\n    }\n\n    return this;\n  }\n\n  loadProvider(Provider) {\n    this.module.provider(Provider.$name, Provider);\n  }\n\n  loadService(Service) {\n    this.module.service(Service.$name, Service)\n  }\n\n  loadController(Controller) {\n    const $inject = Controller.$inject;\n\n    if (!Utils.hasValue($inject, '$scope')) {\n      $inject.unshift('$scope');\n    }\n\n    this.module.controller(Controller.$name, Controller);\n  }\n\n  loadDirective(Directive) {\n    const helper = (...args) => {\n      return new Directive(...args);\n    }\n\n    helper.$inject = Directive.$inject;\n    this.module.directive(Directive.$name, helper);\n  }\n\n  loadDecorator(Decorator) {\n    let decorator;\n    const $inject = Decorator.$inject;\n\n    const helper = (...args) => {\n      decorator = new Decorator(...args);\n      return decorate;\n    }\n\n    const decorate = (...args) => {\n      decorator.decorate(...args);\n      return decorator.$delegate;\n    }\n\n    if (!Utils.hasValue($inject, '$delegate')) {\n      $inject.unshift('$delegate');\n    }\n\n    this.module.decorator(Decorator.$name, helper);\n  }\n\n  loadFactory(Factory) {\n    const helper = (...args) => {\n      const factory = new Factory(...args);\n      return factory::factory.create;\n    }\n\n    helper.$inject = Factory.$inject;\n    this.module.factory(Factory.$name, helper);\n  }\n\n  loadFilter(Filter) {\n    const helper = (...args) => {\n      const filter = new Filter(...args);\n      return filter::filter.filter;\n    }\n\n    helper.$inject = Filter.$inject;\n    this.module.filter(Filter.$name, helper);\n  }\n\n  loadConfig(Config) {\n    const helper = (...args) => {\n      const config = new Config(...args);\n      return config.configure();\n    }\n\n    helper.$inject = Config.$inject;\n    this.module.config(helper);\n  }\n\n  loadRunner(Runner) {\n    const helper = (...args) => {\n      const runner = new Runner(...args);\n      return runner.run();\n    }\n\n    helper.$inject = Runner.$inject;\n    this.module.run(helper);\n  }\n}\n"]}